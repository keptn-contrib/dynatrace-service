// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package adapter_mock

import (
	"github.com/keptn-contrib/dynatrace-service/internal/adapter"
	"github.com/keptn-contrib/dynatrace-service/internal/config"
	"sync"
)

// DynatraceConfigProviderMock is a mock implementation of config.DynatraceConfigProvider.
//
// 	func TestSomethingThatUsesDynatraceConfigProvider(t *testing.T) {
//
// 		// make and configure a mocked config.DynatraceConfigProvider
// 		mockedDynatraceConfigProvider := &DynatraceConfigProviderMock{
// 			GetDynatraceConfigFunc: func(event adapter.EventContentAdapter) (*config.DynatraceConfig, error) {
// 				panic("mock out the GetDynatraceConfig method")
// 			},
// 		}
//
// 		// use mockedDynatraceConfigProvider in code that requires config.DynatraceConfigProvider
// 		// and then make assertions.
//
// 	}
type DynatraceConfigProviderMock struct {
	// GetDynatraceConfigFunc mocks the GetDynatraceConfig method.
	GetDynatraceConfigFunc func(event adapter.EventContentAdapter) (*config.DynatraceConfig, error)

	// calls tracks calls to the methods.
	calls struct {
		// GetDynatraceConfig holds details about calls to the GetDynatraceConfig method.
		GetDynatraceConfig []struct {
			// Event is the event argument value.
			Event adapter.EventContentAdapter
		}
	}
	lockGetDynatraceConfig sync.RWMutex
}

// GetDynatraceConfig calls GetDynatraceConfigFunc.
func (mock *DynatraceConfigProviderMock) GetDynatraceConfig(event adapter.EventContentAdapter) (*config.DynatraceConfig, error) {
	if mock.GetDynatraceConfigFunc == nil {
		panic("DynatraceConfigProviderMock.GetDynatraceConfigFunc: method is nil but DynatraceConfigProvider.GetDynatraceConfig was just called")
	}
	callInfo := struct {
		Event adapter.EventContentAdapter
	}{
		Event: event,
	}
	mock.lockGetDynatraceConfig.Lock()
	mock.calls.GetDynatraceConfig = append(mock.calls.GetDynatraceConfig, callInfo)
	mock.lockGetDynatraceConfig.Unlock()
	return mock.GetDynatraceConfigFunc(event)
}

// GetDynatraceConfigCalls gets all the calls that were made to GetDynatraceConfig.
// Check the length with:
//     len(mockedDynatraceConfigProvider.GetDynatraceConfigCalls())
func (mock *DynatraceConfigProviderMock) GetDynatraceConfigCalls() []struct {
	Event adapter.EventContentAdapter
} {
	var calls []struct {
		Event adapter.EventContentAdapter
	}
	mock.lockGetDynatraceConfig.RLock()
	calls = mock.calls.GetDynatraceConfig
	mock.lockGetDynatraceConfig.RUnlock()
	return calls
}
