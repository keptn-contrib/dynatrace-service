# For a quick start check out our HTTP Requests collection (Tools|HTTP Client|Open HTTP Requests Collection) or
# paste cURL into the file and request will be converted to HTTP Request format.
#
# Following HTTP Request Live Templates are available:
# * 'gtrp' and 'gtr' create a GET request with or without query parameters;
# * 'ptr' and 'ptrp' create a POST request with a simple or parameter-like body;
# * 'mptr' and 'fptr' create a POST request to submit a form with a text or file field (multipart/form-data);

POST http://localhost:8080/
Accept: application/json
Cache-Control: no-cache
Content-Type: application/cloudevents+json

{
  "type": "sh.keptn.events.evaluation-done",
  "contenttype": "application/json",
  "specversion": "0.2",
  "source": "test-event",
  "data":{
      "deploymentstrategy":"direct",
      "evaluationdetails":{
         "indicatorResults":[
            {
               "score":0,
               "status":"failed",
               "targets":[
                  {
                     "criteria":"<=800",
                     "targetValue":800,
                     "violated":true
                  },
                  {
                     "criteria":"<=+10%",
                     "targetValue":549.1967956487127,
                     "violated":true
                  },
                  {
                     "criteria":"<600",
                     "targetValue":600,
                     "violated":true
                  }
               ],
               "value":{
                  "metric":"response_time_p95",
                  "success":true,
                  "value":1002.6278552658177
               }
            }
         ],
         "result":"fail",
         "score":73.07692307692307,
         "sloFileContent":"LS0tDQpzcGVjX3ZlcnNpb246ICcxLjAnDQpjb21wYXJpc29uOg0KICBjb21wYXJlX3dpdGg6ICJzaW5nbGVfcmVzdWx0Ig0KICBpbmNsdWRlX3Jlc3VsdF93aXRoX3Njb3JlOiAicGFzcyINCiAgYWdncmVnYXRlX2Z1bmN0aW9uOiBhdmcNCm9iamVjdGl2ZXM6DQogIC0gc2xpOiByZXNwb25zZV90aW1lX3A5NQ0KICAgIHBhc3M6ICAgICAgICAjIHBhc3MgaWYgKHJlbGF0aXZlIGNoYW5nZSA8PSAxMCUgQU5EIGFic29sdXRlIHZhbHVlIGlzIDwgNTAwKQ0KICAgICAgLSBjcml0ZXJpYToNCiAgICAgICAgICAtICI8PSsxMCUiICMgcmVsYXRpdmUgdmFsdWVzIHJlcXVpcmUgYSBwcmVmaXhlZCBzaWduIChwbHVzIG9yIG1pbnVzKQ0KICAgICAgICAgIC0gIjw2MDAiICAgIyBhYnNvbHV0ZSB2YWx1ZXMgb25seSByZXF1aXJlIGEgbG9naWNhbCBvcGVyYXRvcg0KICAgIHdhcm5pbmc6ICAgICAjIGlmIHRoZSByZXNwb25zZSB0aW1lIGlzIGJlbG93IDgwMG1zLCB0aGUgcmVzdWx0IHNob3VsZCBiZSBhIHdhcm5pbmcNCiAgICAgIC0gY3JpdGVyaWE6DQogICAgICAgICAgLSAiPD04MDAiDQp0b3RhbF9zY29yZToNCiAgcGFzczogIjkwJSINCiAgd2FybmluZzogNzUl",
         "timeEnd":"2019-11-18T11:29:36Z",
         "timeStart":"2019-11-18T11:21:06Z"
      },
      "project":"sockshop",
      "result":"fail",
      "service":"carts",
      "stage":"dev",
      "teststrategy":"performance",
      "labels": {
        "testid": "12345",
        "buildnr": "build17",
        "runby": "JohnDoe"
      }
   },
   "id":"1b7cd584-320e-4ef0-8522-8a817263fdab",
   "time":"2019-11-18T11:30:45.340Z",
   "shkeptncontext":"60077081-f902-4407-bc15-7c70be41a836"
}

###
