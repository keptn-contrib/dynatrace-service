name: Create release
on:
  workflow_dispatch:

env:
  KEPTN_BOT_NAME: "Keptn Contrib Bot"
  KEPTN_BOT_EMAIL: "keptn-contrib-bot@users.noreply.github.com"
  VERSION_FILE: "x-release-please-version.json"

defaults:
  run:
    shell: bash
jobs:
  prepare:
    name: Prepare release run
    runs-on: ubuntu-22.04
    if: startsWith(github.ref, 'refs/heads/release-')
    outputs:
      branch: ${{ steps.current_branch.outputs.branch }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3.5.3
        with:
          fetch-depth: 0
          token: ${{ secrets.KEPTN_BOT_TOKEN }}

      - name: Find current branch
        id: current_branch
        run: |
          branch=${GITHUB_REF#refs/heads/}
          echo "branch=${branch}" >> $GITHUB_OUTPUT

  ############################################################################
  # Create Release
  ############################################################################

  release-please:
    needs:
      - prepare
    runs-on: ubuntu-22.04
    name: Release please
    if: startsWith(github.ref, 'refs/heads/release-')
    outputs:
      release_created: ${{ steps.release_please.outputs.release_created }}
      tag_name: ${{ steps.release_please.outputs.tag_name }}
      major: ${{ steps.release_please.outputs.major }}
      minor: ${{ steps.release_please.outputs.minor }}
      patch: ${{ steps.release_please.outputs.patch }}
    steps:
      - name: Release please
        env:
          KEPTN_BOT_NAME: ${{ env.KEPTN_BOT_NAME }}
          KEPTN_BOT_EMAIL: ${{ env.KEPTN_BOT_EMAIL }}
        id: release_please
        uses: google-github-actions/release-please-action@v3.7.11
        with:
          command: github-release
          release-type: go
          package-name: dynatrace-service
          changelog-path: CHANGELOG.md
          default-branch: ${{ needs.prepare.outputs.branch }}
          bump-minor-pre-major: true
          bump-patch-for-minor-pre-major: false
          include-v-in-tag: false
          signoff: "${{ env.KEPTN_BOT_NAME }} <${{ env.KEPTN_BOT_EMAIL }}>"
          pull-request-title-pattern: "build: release ${component} ${version}"
          extra-files: |
            ${{ env.VERSION_FILE }}
          changelog-types: |
            [{"type":"feat","section":"Features","hidden":false},
            {"type":"fix","section":"Bug Fixes","hidden":false},
            {"type":"chore","section":"Other","hidden":false},
            {"type":"docs","section":"Docs","hidden":false},
            {"type":"perf","section":"Performance","hidden":false},
            {"type":"refactor","section":"Refactoring","hidden":false},
            {"type":"build","section":"Build","hidden":true},
            {"type":"ci","section":"CI","hidden":true},
            {"type":"revert","section":"Revert","hidden":true},
            {"type":"style","section":"Style","hidden":true},
            {"type":"test","section":"Test","hidden":true}]

  ############################################################################
  # Build Docker Image
  ############################################################################
  docker_build:
    needs:
      - release-please
    name: Build Docker Image
    if: ${{ needs.release-please.outputs.release_created }}
    runs-on: ubuntu-22.04
    env:
      VERSION: ${{ needs.release-please.outputs.major }}.${{ needs.release-please.outputs.minor }}.${{ needs.release-please.outputs.patch }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3.5.3

      # load DOCKER_ORGANIZATION & IMAGE variable from .ci_env
      - name: Load CI Environment from .ci_env
        id: load_ci_env
        uses: c-py/action-dotenv-to-setenv@v4
        with:
          env-file: .ci_env

      - name: Docker Build
        uses: keptn/gh-automation/.github/actions/docker-build@v1.6.0
        with:
          TAGS: |
            ${{ env.DOCKER_ORGANIZATION }}/${{ env.IMAGE }}:${{ env.VERSION }}
          BUILD_ARGS: |
            version=${{ env.VERSION }}
          REGISTRY_USER: ${{ secrets.REGISTRY_USER }}
          REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}

  ############################################################################
  # Build Helm Chart
  ############################################################################
  build-helm-chart:
    needs:
      - release-please
    name: Build Helm Charts
    if: ${{ needs.release-please.outputs.release_created }}
    uses: ./.github/workflows/build-helm-chart.yml
    with:
      branch: ${{ needs.prepare.outputs.branch }}
      version: ${{ needs.release-please.outputs.major }}.${{ needs.release-please.outputs.minor }}.${{ needs.release-please.outputs.patch }}
      release: true

  ############################################################################
  # Release
  ############################################################################
  release:
    name: "Release"
    runs-on: ubuntu-22.04
    needs:
      - release-please
      - docker_build
      - build-helm-chart
    steps:
      - name: Download Release Artifacts
        if: ${{ needs.release-please.outputs.release_created }}
        uses: actions/download-artifact@v3
        with:
          path: ./dist

      - name: Add artifacts to release
        id: add_artifacts_to_release
        uses: softprops/action-gh-release@v1
        if: ${{ needs.release-please.outputs.release_created }}
        with:
          tag_name: ${{ needs.release-please.outputs.tag_name }}
          files: "./dist/installer/*.tgz"

